/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TableImport } from './routes/table'
import { Route as StudentsStudentIdViewImport } from './routes/students.$studentId.view'
import { Route as StudentsStudentIdEditImport } from './routes/students.$studentId.edit'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const TableRoute = TableImport.update({
  id: '/table',
  path: '/table',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const StudentsStudentIdViewRoute = StudentsStudentIdViewImport.update({
  id: '/students/$studentId/view',
  path: '/students/$studentId/view',
  getParentRoute: () => rootRoute,
} as any)

const StudentsStudentIdEditRoute = StudentsStudentIdEditImport.update({
  id: '/students/$studentId/edit',
  path: '/students/$studentId/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/table': {
      id: '/table'
      path: '/table'
      fullPath: '/table'
      preLoaderRoute: typeof TableImport
      parentRoute: typeof rootRoute
    }
    '/students/$studentId/edit': {
      id: '/students/$studentId/edit'
      path: '/students/$studentId/edit'
      fullPath: '/students/$studentId/edit'
      preLoaderRoute: typeof StudentsStudentIdEditImport
      parentRoute: typeof rootRoute
    }
    '/students/$studentId/view': {
      id: '/students/$studentId/view'
      path: '/students/$studentId/view'
      fullPath: '/students/$studentId/view'
      preLoaderRoute: typeof StudentsStudentIdViewImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/table': typeof TableRoute
  '/students/$studentId/edit': typeof StudentsStudentIdEditRoute
  '/students/$studentId/view': typeof StudentsStudentIdViewRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/table': typeof TableRoute
  '/students/$studentId/edit': typeof StudentsStudentIdEditRoute
  '/students/$studentId/view': typeof StudentsStudentIdViewRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/table': typeof TableRoute
  '/students/$studentId/edit': typeof StudentsStudentIdEditRoute
  '/students/$studentId/view': typeof StudentsStudentIdViewRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/table'
    | '/students/$studentId/edit'
    | '/students/$studentId/view'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/table' | '/students/$studentId/edit' | '/students/$studentId/view'
  id:
    | '__root__'
    | '/'
    | '/table'
    | '/students/$studentId/edit'
    | '/students/$studentId/view'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  TableRoute: typeof TableRoute
  StudentsStudentIdEditRoute: typeof StudentsStudentIdEditRoute
  StudentsStudentIdViewRoute: typeof StudentsStudentIdViewRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  TableRoute: TableRoute,
  StudentsStudentIdEditRoute: StudentsStudentIdEditRoute,
  StudentsStudentIdViewRoute: StudentsStudentIdViewRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/table",
        "/students/$studentId/edit",
        "/students/$studentId/view"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/table": {
      "filePath": "table.tsx"
    },
    "/students/$studentId/edit": {
      "filePath": "students.$studentId.edit.tsx"
    },
    "/students/$studentId/view": {
      "filePath": "students.$studentId.view.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
